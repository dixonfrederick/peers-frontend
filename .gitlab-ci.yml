image: node:16-alpine

include:
  - template: Code-Quality.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml

stages:
  - build
  - test
  - deploy
  - sonar
  - quality


build:
  stage: build
  except:
    - master
  environment:
    name: "if ['$CI_COMMIT_REF_NAME' == 'master']; then 'production'; else 'staging'; fi"
  cache:
    key: $CI_COMMIT_REF_SLUG 
    paths:
      - node_modules/
  before_script:
    - npm install
  script:
    - npm run build
  artifacts:
    paths:
      - build/
    expire_in: 1 days

build-production:
  stage: build
  only:
    - master
  environment:
    name: production
  cache:
    key: $CI_COMMIT_REF_SLUG 
    paths:
      - node_modules/
  before_script:
    - npm install
  script:
    - npm run build
  artifacts:
    paths:
      - build/
    expire_in: 1 days

test-staging:
  stage: test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  except:
    - master
  needs:
    - build-staging
  cache:
    key: $CI_COMMIT_REF_SLUG 
    paths:
      - node_modules/
  before_script:
    - npm install
  script:
    - npm run test:ci
  artifacts:
    paths:
      - coverage/
    when: always
    reports:
      junit:
        - junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
    expire_in: 1 days

test-production:
  stage: test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  only:
    - master
  needs:
    - build
  cache:
    key: $CI_COMMIT_REF_SLUG 
    paths:
      - node_modules/
  before_script:
    - npm install
  script:
    - npm run test:ci
  artifacts:
    paths:
      - coverage/
    when: always
    reports:
      junit:
        - junit.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
    expire_in: 1 days


sast:
  stage: test
  artifacts:
    reports:
      sast: gl-sast-report.json
    expire_in: 1 days
  rules:
    - when: never
  variables:
    SEARCH_MAX_DEPTH: 4
    SAST_EXCLUDED_PATHS: "**/coverage/**, **/node_modules/**, **/build/**, **/public/**"
    SAST_BANDIT_EXCLUDED_PATHS: "****/coverage/**, **/node_modules/**, **/build/**, **/public/**"
  script:
    - echo "$CI_JOB_NAME is used for configuration only, and its script should not be executed"
    - exit 1

staging:
  stage: deploy
  needs:
    - build-staging
    - test-staging
  environment:
    name: staging
  before_script:
    - npm install -g firebase-tools
  script:
    - firebase deploy --token $FIREBASE_TOKEN -P $STAGING_ID
  dependencies:
    - build
  only:
    - staging
    - coldfix

production:
  stage: deploy
  needs:
    - build-production
    - test-production
  dependencies:
    - build-production
    - test-production
  environment:
    name: production
  before_script:
    - npm install -g firebase-tools
  script:
    - firebase deploy --token $FIREBASE_TOKEN -P $PROD
  only:
    - master

sonarqube-staging:
  stage: sonar
  except:
    - master
  needs:
    - test-staging
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [ "" ]
  script:
    - sonar-scanner -Dsonar.login=$SONAR_LOGIN -Dsonar.projectKey=$SONAR_PROJECT_KEY
  dependencies:
    - test-staging
  
sonarqube-prod:
  stage: sonar
  only:
    - master
  needs:
    - test-production
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  image:
    name: sonarsource/sonar-scanner-cli:4.6
    entrypoint: [ "" ]
  script:
    - sonar-scanner -Dsonar.login=$SONAR_LOGIN -Dsonar.projectKey=$SONAR_PROJECT_KEY
  dependencies:
    - test-production

code_quality:
  stage: quality
  artifacts:
    expose_as: 'Code Quality Report'
    paths: [gl-code-quality-report.json]
    expire_in: 1 days